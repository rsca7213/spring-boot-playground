plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.playground'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.flywaydb:flyway-core:11.9.0'
	implementation 'org.flywaydb:flyway-database-postgresql:11.9.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.postgresql:postgresql'
	implementation(platform("software.amazon.awssdk:bom:2.27.21"))
	implementation 'software.amazon.awssdk:s3'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
}

tasks.named('test', Test) {
	useJUnitPlatform()

	jvmArgs "-Dspring.profiles.active=test"

	// Configuration to load Mockito's Byte Buddy agent
	def byteBuddyAgent = configurations.testRuntimeClasspath.find { it.name.contains("byte-buddy-agent") }

	if (byteBuddyAgent != null) {
		jvmArgs "-javaagent:${byteBuddyAgent.absolutePath}"
		logger.lifecycle("Configured -javaagent for Mockito: ${byteBuddyAgent.absolutePath}")
	} else {
		logger.warn("Could not find byte-buddy-agent in testRuntimeClasspath. The Mockito warning might persist.")
	}
}
